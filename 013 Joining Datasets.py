# This script joins the data obtained from the ROMP and CenterNet w/keypoints model
from glob import glob
import json
import numpy as np

a = [[1590,1758,1803,3390,3636,3690,5000,5159,5199,7136,7337,7381,9042,9236,9277,10999,11246,11284,13320,13611,13652],
    [1180,1389,1425,2476,2694,2735,4920,5119,5152,7011,7264,7322,9445,9631,9679,12134,12333,12382,13844,14047,14085,16335,16631,16693,18768,19005,19052,20900,21081,21117,23088,23277,23325,25290,25501,25557,27264,27481,27529,28879,29089,29144,31809,32008,32045,33888,34102,34166,35413,35626,35679,36859,37034,37076,38557,38759,38827,40246,40423,40458,44347,44587,44640,46495,46681,46747,48868,49063,49120,50590,50797,50840,52597,52788,52834,54290,54502,54552],
    [3408,3594,3651,5328,5528,5568,12140,12372,12436,15475,15672,15746,18428,18629,18694,20309,20515,20554,22345,22534,22585,25045,25242,25303,28083,28284,28335,31856,32065,32117,33829,34039,34105,35655,35838,35888,38117,38315,38367,47371,47558,47627,49250,49412,49447,50953,51119,51165,54899,55060,55111],
    [2535,2674,2709,4943,5177,5235,6852,7039,7100,9496,9734,9784,11101,11304,11366,15840,16089,16151,19949,20170,20225,22758,22945,23002,29200,29390,29446,33199,33388,33427,38363,38532,38590,40525,40713,40753,43774,43917,43961,46114,46297,46339,47901,48097,48134,51317,51511,51565,54451,54718,54760],
    [2950,3146,3205,6023,6207,6334,8486,8653,8711,11232,11409,11488,14045,14266,14328,17070,17301,17370,18605,18827,18905,21028,21246,21314,25765,25960,26018,30440,30671,30731,32760,32976,33039,35278,35464,35517,37151,37371,37425,39981,40222,40272,41496,41678,41729,44072,44244,44289,47769,47937,47991,50822,51024,51088,52967,53133,53184,54534,54746,54817],
    [3132,3346,3393,5675,5860,5918,9318,9509,9560,12246,12414,12472,15531,15741,15798,18678,18831,18884,23781,23976,24028,25879,26063,26118,29193,29385,29443,31245,31452,31517,32767,32939,33010,35160,35366,35432,38683,38875,38942,40817,41025,41071,42925,43177,43234,46876,47070,47123,51376,51573,51630,53476,53682,53731],
    [430,616,653,2247,2415,2471,4987,5235,5297,7859,8071,8130,12733,12915,12967,15618,15846,15901,18564,18742,18797,21020,21174,21233,23466,23691,23749,25179,25345,25401,33331,33512,33571,36026,36209,36269,40684,40886,40936,42230,42415,42468,44568,44785,44873,47240,47429,47473,53765,53937,53997],
    [274,448,509,1821,2023,2073,4064,4308,4366,5682,5868,5911,8586,8756,8804,10628,10812,10854,12188,12362,12408,14601,14821,14859,16634,16811,16879,18262,18491,18545,20662,20881,20931,22047,22315,22398,23613,23949,24005,26460,26708,26782,29213,29442,29490,31745,31950,32020,33512,33756,33833,35397,35586,35628,37458,37694,37743,40074,40299,40349,41939,42142,42200,43473,43618,43670,44949,45078,45128,46196,46296,46352]
]

key_frames = []
for batch in a:
    for i, frame in enumerate(batch):
        if i % 3 == 0:
            start_frame = frame
        if (i+2) % 3 == 0:
            key_frames.append(frame - start_frame)

data = {}
for i, video in enumerate(glob('data/video/cut/*.mp4')):
    if '504' in video:
        continue
    video_id = video.replace('data/video/cut\\', '').replace('.mp4', '')

    ball_data_raw = json.load(open(f'data/tab/json/{video_id}.json', 'r'))
    ball_data = []
    pose2d_data = []
    for key in ball_data_raw.keys():
        frame = ball_data_raw[key]

        if int(key) <= key_frames[i]:
            # Comment out this for loop if you do NOT use 2D pose data
            for class_, keypoints in zip(frame['detection_classes'], frame['detection_keypoints']):
                if class_ == 1:
                    pose2d_data.append(keypoints)
                    break
        
        else:
            for class_, box in zip(frame['detection_classes'], frame['detection_boxes']):
                if class_ == 37:
                    ball_data.append([box[0], box[1], box[2], box[3]])
                    break

    pose_data_raw = np.load(f'data/tab/npz/player_{video_id}_results.npz',allow_pickle=True)['results'][()]
    pose_data = []
    for key in pose_data_raw.keys():
        pose_data.append(pose_data_raw[key][0]['j3d_smpl24'].tolist())

    data[video_id] = {'ball': ball_data, 'pose': pose_data, 'pose2d': pose2d_data}

json.dump(data, open('data/tab/joined/data.json', 'w'))